// Here we downgrade GATK to a specific version (this one has known issues be we wanted consistency with previous data)
// We also tell the pipeline where we mounted the reference genomes
params.gatk.jar = "/opt/gatk-4.1.7.0/gatk.jar"

// This path must exist inside your containers
params.cache_base = "/dss/dssfs02/lwp-dss-0001/pn29ya/pn29ya-dss-0000/cache"
// I also need to bind params.{genome_base,script_base} i.e. /var/pipeline/ref,/var/pipeline/repository

// limit queue size
executor.queueSize = 40

profiles {
	charliecloud {
		charliecloud {
			// nextflow automatically takes the container env file, at the moment it is not possible to mix file and var types as it will try to read your var as a file
			runOptions = "--no-passwd --set-env=/dss/dssfs02/lwp-dss-0001/pn29ya/pn29ya-dss-0000/nextflow-env/mocaseq/env --bind /gpfs/scratch/pn29ya/${USER}/${USER}/tmp:/tmp --bind /dss/dssfs02/lwp-dss-0001/pn29ya/pn29ya-dss-0000/projects:/dss/dssfs02/lwp-dss-0001/pn29ya/pn29ya-dss-0000/projects --bind ${projectDir}/repository:/var/pipeline/repository --bind /dss/dssfs02/lwp-dss-0001/pn29ya/pn29ya-dss-0000/reference:/var/pipeline/ref --bind /dss/dssfs02/lwp-dss-0001/pn29ya/pn29ya-dss-0000/cache:/dss/dssfs02/lwp-dss-0001/pn29ya/pn29ya-dss-0000/cache"
		}

		process {
			container = "${HOME}/images-live/mocaseq2"

			// withName blocks cannot be empty

			withName: cnv_kit_coverage { container = "${HOME}/images-live/cnv-kit-0.9.9" }
			withName: cnv_kit_single   { container = "${HOME}/images-live/cnv-kit-0.9.9" }
			withName: cnv_kit_matched   { container = "${HOME}/images-live/cnv-kit-0.9.9" }
			withName: igv_track_cnr    { container = "${HOME}/images-live/structural-variation-jabba" }
			withName: igv_track_rds    { container = "${HOME}/images-live/structural-variation-jabba" }
			withName: jabba_matched    { container = "${HOME}/images-live/structural-variation-jabba" }
			withName: jabba_plot       { container = "${HOME}/images-live/structural-variation-jabba" }
		}
	}

	slurm {
		process {
			executor = 'slurm'
			clusterOptions = '--cluster=serial --partition=serial_std' // --reservation=gen_seq
			cpus = 1
			memory = '3 GB'
			time = '1h'

			// withName blocks cannot be empty

			// Suppress warnings, we don't batch submit native scripts
			withName: cache_genome_url_bwa_index             { executor = 'local' }
			withName: cache_genome_url_all_vcf               { executor = 'local' }
			withName: cache_genome_url_alt_haplotype         { executor = 'local' }
			withName: cache_genome_url_centromere            { executor = 'local' }
			withName: cache_genome_url_cgc                   { executor = 'local' }
			withName: cache_genome_url_common_vcf            { executor = 'local' }
			withName: cache_genome_url_dbnsfp                { executor = 'local' }
			withName: cache_genome_url_dict                  { executor = 'local' }
			withName: cache_genome_url_fasta                 { executor = 'local' }
			withName: cache_genome_url_fasta_index           { executor = 'local' }
			withName: cache_genome_url_gc_wig                { executor = 'local' }
			withName: cache_genome_url_gencode_genes_bed     { executor = 'local' }
			withName: cache_genome_url_mappability           { executor = 'local' }
			withName: cache_genome_url_map_wig               { executor = 'local' }
			withName: cache_genome_url_micro_satellite       { executor = 'local' }
			withName: cache_genome_url_ref_flat              { executor = 'local' }
			withName: cache_genome_url_sift_clinvar          { executor = 'local' }
			withName: cache_genome_url_sift_cosmic_coding    { executor = 'local' }
			withName: cache_genome_url_sift_cosmic_noncoding { executor = 'local' }
			withName: cache_genome_url_sift_dbsnp            { executor = 'local' }
			withName: cache_genome_url_sift_gnomad_exome     { executor = 'local' } 
			withName: cache_genome_url_sift_gnomad_genome    { executor = 'local' }
			withName: cache_genome_url_tru_sight             { executor = 'local' }

			withName: delly_matched_call {
				memory = '20 GB'
				time = '35h'
				errorStrategy = 'finish'
			}

			withName: delly_matched_filter {
				memory = '5 GB'
				time = '16h'
				errorStrategy = 'finish'
			}

			withName: fastqc_paired {
				memory = '5 GB'
				time = '20h'
				errorStrategy = 'finish'
			}

			withName: trim_paired {
				memory = '5 GB'
				time = '24h'
				errorStrategy = 'finish'
			}

			withName: bwa_mem_paired {
				cpus = 27
				memory = '55 GB'
				time = '72h'
				errorStrategy = 'finish'
			}

			withName: mark_duplicates {
				cpus = 6
				memory = '21 GB'
				time = { 72.hour * task.attempt }
				errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' }
    				maxRetries = 3
			}

			withName: recalibrate {
				cpus = 6
				memory = '21 GB'
				time = '72h'
				errorStrategy = 'finish'
			}

			withName: mutect_matched {
				cpus = 3
				memory = '6 GB'
				time = '44h'
				errorStrategy = 'finish'
			}

			withName: mutect_single_normal {
				cpus = 3
				memory = '6 GB'
				time = '44h'
				errorStrategy = 'finish'
			}

			withName: mutect_single_tumor {
				cpus = 3
				memory = '6 GB'
				time = '44h'
				errorStrategy = 'finish'
			}
			
			withName: mutect_filter {
				cpus = 2
				memory = '5 GB'
				time = '4h'
				errorStrategy = 'finish'
			}
			
			withName: mutect_sift {
				cpus = 1
				memory = '6 GB'
				time = { 2.hour * task.attempt }
				errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' }
    				maxRetries = 3
			}

			withName: mutect_combine_vcf {
				cpus = 2
				memory = '7 GB'
				time = '44h'
				errorStrategy = 'finish'
			}
			
			withName: mutect_post_process_matched {
				cpus = 2
				memory = '1256 MB'
				time = '44h'
				errorStrategy = 'finish'
			}
			
			withName: mutect_signatures_matched {
				cpus = 1
				memory = '2 GB'
				time = '1h'
				errorStrategy = 'ignore'
			}

			withName: manta_matched {
				cpus = 21
				memory = '50 GB'
				time = '48h'
				errorStrategy = 'finish'
			}

			withName: manta_matched_post {
				memory = '17 GB'
				time = '5h'
				errorStrategy = 'finish'
			}

			withName: sam_to_fastq_paired {
				cpus = 2
				memory = '55 GB'
				time = '24h'
				errorStrategy = 'finish'
			}

			withName: strelka_matched {
				cpus = 5
				time = '8h'
				errorStrategy = 'finish'
			}


			withName: cnv_kit_coverage {
				cpus = 5
				time = '12h'
				memory = '15 GB'
				errorStrategy = 'finish'
			}

			withName: cnv_kit_single {
				cpus = 5
				errorStrategy = 'finish'
			}
			
			withName: cnv_kit_matched {
				cpus = 5
				time = '12h'
				errorStrategy = 'finish'
			}

			withName: hmm_copy_wig {
				memory = '2048 MB'
				time = '10h'
				errorStrategy = 'finish'
			}

			withName: hmm_copy_tsv {
				memory = '2 GB'
				time = '5h'
				errorStrategy = 'finish'	
			}

			withName: hmm_copy_plot {
				memory = '2 GB'
				time = '1h'
				errorStrategy = 'finish'
			}

			withName: igv_track_depth {
				time = '4h'
				memory = '50 GB'
				errorStrategy = 'finish'
			}

			withName: igv_track_cnr {
				errorStrategy = 'finish'
			}

			withName: igv_track_rds {
				errorStrategy = 'finish'
			}

			withName: jabba_matched {
				time = '44h'
				memory = '20 GB'
				errorStrategy = 'ignore'
			}

			withName: jabba_plot {
				time = '20h'
				memory = '10 GB'
				errorStrategy = 'ignore'
			}

			withName: loh_matched {
				memory = '1 GB'
				time = '10h'
				errorStrategy = 'finish'
			}
			
			withName: loh_matched_plot {
				memory = { 2.GB * task.attempt }
				time = { 2.hour * task.attempt }
				errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'ignore' }
    				maxRetries = 3
			}

			withName: loh_matched_assign_alleles {
				memory = '7 GB'
				time = '5h'
				errorStrategy = 'finish'
			}

			withName: msi_matched {
				memory = '5 GB'
				time = '10h'
				errorStrategy = 'finish'
			}
		}
	}
}

